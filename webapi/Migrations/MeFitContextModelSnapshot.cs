// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.DatabaseContext;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(MeFitContext))]
    partial class MeFitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exercise_Musclegroups", b =>
                {
                    b.Property<int>("Fk_Exercise_Id")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Musclegroup_Id")
                        .HasColumnType("int");

                    b.HasKey("Fk_Exercise_Id", "Fk_Musclegroup_Id");

                    b.HasIndex("Fk_Musclegroup_Id");

                    b.ToTable("Exercise_Musclegroups");

                    b.HasData(
                        new
                        {
                            Fk_Exercise_Id = 1,
                            Fk_Musclegroup_Id = 2
                        },
                        new
                        {
                            Fk_Exercise_Id = 2,
                            Fk_Musclegroup_Id = 4
                        },
                        new
                        {
                            Fk_Exercise_Id = 3,
                            Fk_Musclegroup_Id = 3
                        },
                        new
                        {
                            Fk_Exercise_Id = 4,
                            Fk_Musclegroup_Id = 6
                        },
                        new
                        {
                            Fk_Exercise_Id = 5,
                            Fk_Musclegroup_Id = 3
                        });
                });

            modelBuilder.Entity("Exercise_Sets", b =>
                {
                    b.Property<int>("Fk_Exercise_Id")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Set_Id")
                        .HasColumnType("int");

                    b.HasKey("Fk_Exercise_Id", "Fk_Set_Id");

                    b.HasIndex("Fk_Set_Id");

                    b.ToTable("Exercise_Sets");

                    b.HasData(
                        new
                        {
                            Fk_Exercise_Id = 1,
                            Fk_Set_Id = 1
                        },
                        new
                        {
                            Fk_Exercise_Id = 2,
                            Fk_Set_Id = 1
                        },
                        new
                        {
                            Fk_Exercise_Id = 3,
                            Fk_Set_Id = 1
                        },
                        new
                        {
                            Fk_Exercise_Id = 4,
                            Fk_Set_Id = 1
                        },
                        new
                        {
                            Fk_Exercise_Id = 5,
                            Fk_Set_Id = 1
                        });
                });

            modelBuilder.Entity("Trainingprogram_Categories", b =>
                {
                    b.Property<int>("Fk_Trainingprogram_Id")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Category_Id")
                        .HasColumnType("int");

                    b.HasKey("Fk_Trainingprogram_Id", "Fk_Category_Id");

                    b.HasIndex("Fk_Category_Id");

                    b.ToTable("Trainingprogram_Categories");
                });

            modelBuilder.Entity("Trainingprogram_Workouts", b =>
                {
                    b.Property<int>("Fk_Trainingprogram_Id")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Workout_Id")
                        .HasColumnType("int");

                    b.HasKey("Fk_Trainingprogram_Id", "Fk_Workout_Id");

                    b.HasIndex("Fk_Workout_Id");

                    b.ToTable("Trainingprogram_Workouts");

                    b.HasData(
                        new
                        {
                            Fk_Trainingprogram_Id = 3,
                            Fk_Workout_Id = 1
                        },
                        new
                        {
                            Fk_Trainingprogram_Id = 3,
                            Fk_Workout_Id = 2
                        },
                        new
                        {
                            Fk_Trainingprogram_Id = 3,
                            Fk_Workout_Id = 7
                        },
                        new
                        {
                            Fk_Trainingprogram_Id = 6,
                            Fk_Workout_Id = 10
                        });
                });

            modelBuilder.Entity("Traningprogram_Categories", b =>
                {
                    b.Property<int>("Fk_Traningprogram_Id")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Category_Id")
                        .HasColumnType("int");

                    b.HasKey("Fk_Traningprogram_Id", "Fk_Category_Id");

                    b.HasIndex("Fk_Category_Id");

                    b.ToTable("Traningprogram_Categories");

                    b.HasData(
                        new
                        {
                            Fk_Traningprogram_Id = 1,
                            Fk_Category_Id = 1
                        },
                        new
                        {
                            Fk_Traningprogram_Id = 2,
                            Fk_Category_Id = 1
                        },
                        new
                        {
                            Fk_Traningprogram_Id = 3,
                            Fk_Category_Id = 1
                        },
                        new
                        {
                            Fk_Traningprogram_Id = 4,
                            Fk_Category_Id = 2
                        },
                        new
                        {
                            Fk_Traningprogram_Id = 5,
                            Fk_Category_Id = 2
                        },
                        new
                        {
                            Fk_Traningprogram_Id = 6,
                            Fk_Category_Id = 3
                        });
                });

            modelBuilder.Entity("Workout_Exercises", b =>
                {
                    b.Property<int>("Fk_Workout_Id")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Exercise_Id")
                        .HasColumnType("int");

                    b.HasKey("Fk_Workout_Id", "Fk_Exercise_Id");

                    b.HasIndex("Fk_Exercise_Id");

                    b.ToTable("Workout_Exercises");

                    b.HasData(
                        new
                        {
                            Fk_Workout_Id = 1,
                            Fk_Exercise_Id = 1
                        },
                        new
                        {
                            Fk_Workout_Id = 1,
                            Fk_Exercise_Id = 5
                        },
                        new
                        {
                            Fk_Workout_Id = 1,
                            Fk_Exercise_Id = 12
                        },
                        new
                        {
                            Fk_Workout_Id = 2,
                            Fk_Exercise_Id = 2
                        },
                        new
                        {
                            Fk_Workout_Id = 2,
                            Fk_Exercise_Id = 13
                        },
                        new
                        {
                            Fk_Workout_Id = 10,
                            Fk_Exercise_Id = 9
                        },
                        new
                        {
                            Fk_Workout_Id = 10,
                            Fk_Exercise_Id = 10
                        },
                        new
                        {
                            Fk_Workout_Id = 12,
                            Fk_Exercise_Id = 9
                        },
                        new
                        {
                            Fk_Workout_Id = 12,
                            Fk_Exercise_Id = 10
                        },
                        new
                        {
                            Fk_Workout_Id = 12,
                            Fk_Exercise_Id = 15
                        });
                });

            modelBuilder.Entity("webapi.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("AddressLine_1")
                        .IsFixedLength();

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("AddressLine_2")
                        .IsFixedLength();

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("AddressLine_3")
                        .IsFixedLength();

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "Hybenvej 23,st. th.",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Horsens",
                            Country = "Denmark",
                            PostalCode = 8700
                        },
                        new
                        {
                            Id = 2,
                            AddressLine1 = "Vestergade 2",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "København",
                            Country = "Denmark",
                            PostalCode = 2000
                        },
                        new
                        {
                            Id = 3,
                            AddressLine1 = "Nørregade 14",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Vejle",
                            Country = "Denmark",
                            PostalCode = 7100
                        });
                });

            modelBuilder.Entity("webapi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Category")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category1 = "Strength"
                        },
                        new
                        {
                            Id = 2,
                            Category1 = "Endurance"
                        },
                        new
                        {
                            Id = 3,
                            Category1 = "Balance"
                        },
                        new
                        {
                            Id = 4,
                            Category1 = "Flexibility"
                        });
                });

            modelBuilder.Entity("webapi.Models.Contributionrequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FkUserProfileId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_UserProfile_id");

                    b.HasKey("Id")
                        .HasName("PK_Contributionrequests_1");

                    b.HasIndex("FkUserProfileId");

                    b.ToTable("Contributionrequests");
                });

            modelBuilder.Entity("webapi.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "any",
                            Name = "Bench press"
                        },
                        new
                        {
                            Id = 2,
                            Description = "any",
                            Name = "Squat"
                        },
                        new
                        {
                            Id = 3,
                            Description = "any",
                            Name = "Deadlift"
                        },
                        new
                        {
                            Id = 4,
                            Description = "any",
                            Name = "Shoulder press"
                        },
                        new
                        {
                            Id = 5,
                            Description = "any",
                            Name = "Rows"
                        },
                        new
                        {
                            Id = 6,
                            Description = "any",
                            Name = "Arm curl"
                        },
                        new
                        {
                            Id = 7,
                            Description = "any",
                            Name = "Arm extention"
                        },
                        new
                        {
                            Id = 8,
                            Description = "any",
                            Name = "Walking"
                        },
                        new
                        {
                            Id = 9,
                            Description = "any",
                            Name = "Running"
                        },
                        new
                        {
                            Id = 10,
                            Description = "any",
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 11,
                            Description = "any",
                            Name = "Push ups"
                        },
                        new
                        {
                            Id = 12,
                            Description = "any",
                            Name = "Pull down"
                        },
                        new
                        {
                            Id = 13,
                            Description = "any",
                            Name = "Leg curl"
                        },
                        new
                        {
                            Id = 14,
                            Description = "any",
                            Name = "Leg extension"
                        },
                        new
                        {
                            Id = 15,
                            Description = "any",
                            Name = "Walking"
                        });
                });

            modelBuilder.Entity("webapi.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("FkStatusId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_status_id");

                    b.Property<int?>("FkTrainingprogramId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_Trainingprogram_id");

                    b.Property<int>("FkUserProfileId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_UserProfile_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FkStatusId");

                    b.HasIndex("FkTrainingprogramId");

                    b.HasIndex("FkUserProfileId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2023, 3, 20, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(467),
                            FkStatusId = 2,
                            FkUserProfileId = 1,
                            StartDate = new DateTime(2023, 2, 24, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(375)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2023, 3, 6, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(495),
                            FkStatusId = 1,
                            FkTrainingprogramId = 3,
                            FkUserProfileId = 2,
                            StartDate = new DateTime(2023, 2, 24, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(491)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2023, 3, 6, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(508),
                            FkStatusId = 1,
                            FkTrainingprogramId = 3,
                            FkUserProfileId = 3,
                            StartDate = new DateTime(2023, 2, 24, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(507)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2023, 3, 20, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(518),
                            FkStatusId = 2,
                            FkUserProfileId = 3,
                            StartDate = new DateTime(2023, 2, 24, 10, 10, 41, 698, DateTimeKind.Local).AddTicks(517)
                        });
                });

            modelBuilder.Entity("webapi.Models.GoalWorkouts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FkGoalId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_Goal_id");

                    b.Property<int>("FkStatusId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_Status_id");

                    b.Property<int>("FkWorkoutId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_Workout_id");

                    b.HasKey("Id");

                    b.HasIndex("FkGoalId");

                    b.HasIndex("FkStatusId");

                    b.HasIndex("FkWorkoutId");

                    b.ToTable("Goal_Workouts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FkGoalId = 2,
                            FkStatusId = 1,
                            FkWorkoutId = 1
                        },
                        new
                        {
                            Id = 2,
                            FkGoalId = 2,
                            FkStatusId = 1,
                            FkWorkoutId = 2
                        },
                        new
                        {
                            Id = 3,
                            FkGoalId = 2,
                            FkStatusId = 1,
                            FkWorkoutId = 7
                        },
                        new
                        {
                            Id = 4,
                            FkGoalId = 3,
                            FkStatusId = 1,
                            FkWorkoutId = 1
                        },
                        new
                        {
                            Id = 5,
                            FkGoalId = 3,
                            FkStatusId = 1,
                            FkWorkoutId = 2
                        },
                        new
                        {
                            Id = 6,
                            FkGoalId = 3,
                            FkStatusId = 1,
                            FkWorkoutId = 7
                        },
                        new
                        {
                            Id = 7,
                            FkGoalId = 3,
                            FkStatusId = 2,
                            FkWorkoutId = 12
                        });
                });

            modelBuilder.Entity("webapi.Models.Musclegroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Musclegroup1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Musclegroup")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Musclegroup", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Musclegroup1 = "Fullbody"
                        },
                        new
                        {
                            Id = 2,
                            Musclegroup1 = "Chest"
                        },
                        new
                        {
                            Id = 3,
                            Musclegroup1 = "Back"
                        },
                        new
                        {
                            Id = 4,
                            Musclegroup1 = "Leg"
                        },
                        new
                        {
                            Id = 5,
                            Musclegroup1 = "Arms"
                        },
                        new
                        {
                            Id = 6,
                            Musclegroup1 = "Shoulders"
                        },
                        new
                        {
                            Id = 7,
                            Musclegroup1 = "Heart"
                        });
                });

            modelBuilder.Entity("webapi.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Reps = 6,
                            Total = 4
                        },
                        new
                        {
                            Id = 2,
                            Reps = 8,
                            Total = 4
                        },
                        new
                        {
                            Id = 3,
                            Reps = 10,
                            Total = 3
                        },
                        new
                        {
                            Id = 4,
                            Reps = 12,
                            Total = 3
                        });
                });

            modelBuilder.Entity("webapi.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Statustype")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Statustype = "Completed"
                        },
                        new
                        {
                            Id = 2,
                            Statustype = "Pending"
                        });
                });

            modelBuilder.Entity("webapi.Models.Trainingprogram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Trainingprograms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Weightlifting"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Powerlifting"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bodybuilding"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cyckling"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Long-distance running"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Yoga"
                        });
                });

            modelBuilder.Entity("webapi.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("FirstLogin")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "78acbd80-93b7-4821-9fb0-a5ee776318da",
                            FirstLogin = true,
                            Username = "administrator@gmail.com"
                        },
                        new
                        {
                            Id = "2c191644-1bac-4e9a-bc8e-1c7054118615",
                            FirstLogin = true,
                            Username = "contributor@gmail.com"
                        },
                        new
                        {
                            Id = "4d24f01a-5261-40f6-a7e0-f051e8e6f599",
                            FirstLogin = true,
                            Username = "regularuser@gmail.com"
                        });
                });

            modelBuilder.Entity("webapi.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Disabilities")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.Property<int>("FkAddressId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_address_id");

                    b.Property<string>("FkUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Fk_user_id");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.Property<string>("MedicalCondition")
                        .HasColumnType("text");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FkAddressId");

                    b.HasIndex("FkUserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disabilities = "",
                            Email = "administrator@gmail.com",
                            Firstname = "Admin",
                            FkAddressId = 1,
                            FkUserId = "78acbd80-93b7-4821-9fb0-a5ee776318da",
                            Height = 180.0,
                            Lastname = "Admin",
                            MedicalCondition = "",
                            Phone = 12345,
                            Picture = "",
                            Weight = 80.0
                        },
                        new
                        {
                            Id = 2,
                            Disabilities = "",
                            Email = "contributor@gmail.com",
                            Firstname = "Contributor",
                            FkAddressId = 1,
                            FkUserId = "2c191644-1bac-4e9a-bc8e-1c7054118615",
                            Height = 170.0,
                            Lastname = "Contributor",
                            MedicalCondition = "",
                            Phone = 12345,
                            Picture = "",
                            Weight = 70.0
                        },
                        new
                        {
                            Id = 3,
                            Disabilities = "",
                            Email = "regularuser@gmail.com",
                            Firstname = "Regularuser",
                            FkAddressId = 1,
                            FkUserId = "4d24f01a-5261-40f6-a7e0-f051e8e6f599",
                            Height = 165.0,
                            Lastname = "Regularuser",
                            MedicalCondition = "",
                            Phone = 12345,
                            Picture = "",
                            Weight = 65.0
                        });
                });

            modelBuilder.Entity("webapi.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FkUserProfileId")
                        .HasColumnType("int")
                        .HasColumnName("FkUserProfileId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("FkUserProfileId");

                    b.ToTable("Workout", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Upper",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lower",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Push",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pull",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chest",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Back",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Leg",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Arms",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Shoulder",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Cardio",
                            Type = "Endurance"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Fullbody",
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 12,
                            FkUserProfileId = 3,
                            Name = "MyWorkout",
                            Type = "Custom"
                        });
                });

            modelBuilder.Entity("Exercise_Musclegroups", b =>
                {
                    b.HasOne("webapi.Models.Exercise", null)
                        .WithMany()
                        .HasForeignKey("Fk_Exercise_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Musclegroup", null)
                        .WithMany()
                        .HasForeignKey("Fk_Musclegroup_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exercise_Sets", b =>
                {
                    b.HasOne("webapi.Models.Exercise", null)
                        .WithMany()
                        .HasForeignKey("Fk_Exercise_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Set", null)
                        .WithMany()
                        .HasForeignKey("Fk_Set_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Trainingprogram_Categories", b =>
                {
                    b.HasOne("webapi.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("Fk_Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Trainingprogram", null)
                        .WithMany()
                        .HasForeignKey("Fk_Trainingprogram_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Trainingprogram_Workouts", b =>
                {
                    b.HasOne("webapi.Models.Trainingprogram", null)
                        .WithMany()
                        .HasForeignKey("Fk_Trainingprogram_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Workout", null)
                        .WithMany()
                        .HasForeignKey("Fk_Workout_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Traningprogram_Categories", b =>
                {
                    b.HasOne("webapi.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("Fk_Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Trainingprogram", null)
                        .WithMany()
                        .HasForeignKey("Fk_Traningprogram_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Workout_Exercises", b =>
                {
                    b.HasOne("webapi.Models.Exercise", null)
                        .WithMany()
                        .HasForeignKey("Fk_Exercise_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Workout", null)
                        .WithMany()
                        .HasForeignKey("Fk_Workout_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webapi.Models.Contributionrequest", b =>
                {
                    b.HasOne("webapi.Models.UserProfile", "FkUserProfile")
                        .WithMany("Contributionrequests")
                        .HasForeignKey("FkUserProfileId")
                        .IsRequired()
                        .HasConstraintName("FK_Contributionrequests_UserProfiles1");

                    b.Navigation("FkUserProfile");
                });

            modelBuilder.Entity("webapi.Models.Goal", b =>
                {
                    b.HasOne("webapi.Models.Status", "FkStatus")
                        .WithMany("Goals")
                        .HasForeignKey("FkStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Goals_Status");

                    b.HasOne("webapi.Models.Trainingprogram", "FkTrainingprogram")
                        .WithMany("Goals")
                        .HasForeignKey("FkTrainingprogramId")
                        .HasConstraintName("FK_Goals_Trainingprograms");

                    b.HasOne("webapi.Models.UserProfile", "FkUserProfile")
                        .WithMany("Goals")
                        .HasForeignKey("FkUserProfileId")
                        .IsRequired()
                        .HasConstraintName("FK_Goals_UserProfiles");

                    b.Navigation("FkStatus");

                    b.Navigation("FkTrainingprogram");

                    b.Navigation("FkUserProfile");
                });

            modelBuilder.Entity("webapi.Models.GoalWorkouts", b =>
                {
                    b.HasOne("webapi.Models.Goal", "FkGoal")
                        .WithMany("GoalWorkouts")
                        .HasForeignKey("FkGoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Status", "FkStatus")
                        .WithMany()
                        .HasForeignKey("FkStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.Workout", "FkWorkout")
                        .WithMany("GoalWorkouts")
                        .HasForeignKey("FkWorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FkGoal");

                    b.Navigation("FkStatus");

                    b.Navigation("FkWorkout");
                });

            modelBuilder.Entity("webapi.Models.UserProfile", b =>
                {
                    b.HasOne("webapi.Models.Address", "FkAddress")
                        .WithMany("UserProfiles")
                        .HasForeignKey("FkAddressId")
                        .IsRequired()
                        .HasConstraintName("FK_UserProfiles_Addresses");

                    b.HasOne("webapi.Models.User", "FkUser")
                        .WithMany("UserProfiles")
                        .HasForeignKey("FkUserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserProfiles_Users");

                    b.Navigation("FkAddress");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("webapi.Models.Workout", b =>
                {
                    b.HasOne("webapi.Models.UserProfile", "FkUserProfile")
                        .WithMany("Workouts")
                        .HasForeignKey("FkUserProfileId");

                    b.Navigation("FkUserProfile");
                });

            modelBuilder.Entity("webapi.Models.Address", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("webapi.Models.Goal", b =>
                {
                    b.Navigation("GoalWorkouts");
                });

            modelBuilder.Entity("webapi.Models.Status", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("webapi.Models.Trainingprogram", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("webapi.Models.User", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("webapi.Models.UserProfile", b =>
                {
                    b.Navigation("Contributionrequests");

                    b.Navigation("Goals");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("webapi.Models.Workout", b =>
                {
                    b.Navigation("GoalWorkouts");
                });
#pragma warning restore 612, 618
        }
    }
}
